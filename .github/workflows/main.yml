name: Build for main

# 予想：mainへのPR/Push、releaseへのPR/Push全てのアクションでトリガーを起動する必要があり、トリガーの中のifで、実行するジョブを分岐させる
on:
  pull_request:
    branches:
      - 'main'
    types: [opened, synchronize, closed]

jobs:
  # PRがmainブランチにmergeされたら実行し、releaseへのPRを作成する
  BuildStg:
    name: Build image as staging

    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    environment: stg

    steps:
      - uses: actions/checkout@v2
        with:
          # fetch all history to find all related pull requests.
          fetch-depth: 0

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1
    
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ secrets.AWS_ECR_REPO_NAME }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:latest --build-arg TARGET_ENV='stg'  .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest

  create-release-pr:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          # fetch all history to find all related pull requests.
          fetch-depth: 0

      - name: Set up Ruby 2.6
        uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.x

      - name: Create a release pull request
        env:
          GIT_PR_RELEASE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_PR_RELEASE_BRANCH_PRODUCTION: release
          GIT_PR_RELEASE_BRANCH_STAGING: main
          GIT_PR_RELEASE_LABELS: release
          # git-pr-release write Time.now in the title.
          TZ: Asia/Tokyo
        run: |
          gem install -N git-pr-release -v "1.4.0"
          git-pr-release --no-fetch
